{"version":3,"sources":["common_components/footer.js","common_components/footer_terms.js","common_components/package_signup.js","common_components/signin.js","common_components/followus.js","common_components/pricing_plan.js","common_components/confirm_and_pay.js","common_components/steppers.js","common_components/skeleton.css.js","common_components/skeleton.js","common_components/card.css.js","common_components/card.js","App.js","serviceWorker.js","index.js"],"names":["Footer","class","href","FooterTerms","className","yup","firstName","required","lastName","username","city","state","zip","terms","email","password","FollowUs","style","height","Form","Row","Group","as","Col","md","controlId","Control","type","placeholder","name","Button","width","src","PricingPlan","React","useState","meal1","setMeal1","meal2","setMeal2","meal3","setMeal3","ToggleButtonGroup","value","exclusive","onChange","event","newMeal","aria-label","ToggleButton","address","zipcode","discount_code","makeStyles","theme","root","button","marginRight","spacing","instructions","marginTop","marginBottom","Container","styled","div","duration","borderRadius","primaryColor","secondaryColor","css","keyframes","animation","margin","Skeleton","rest","defaultProps","Card","children","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.55105b79.chunk.js","sourcesContent":["import React from 'react';\nimport './footer.css';\n\nexport default function Footer() {\n  return (\n      <footer class=\"footer py-8 py-md-11 @@classList\">\n        <div class=\"container-lg\">\n          <div class=\"row\">\n            <div class=\"col-md-4\">\n\n\n              <h2 class=\"font-family-serif text-white mb-1\">\n                Goodkit\n              </h2>\n\n\n              <p class=\"text-white-60\">\n                A better way to build.\n              </p>\n\n            </div>\n            <div class=\"col-1 col-md\">\n\n\n              <h6 class=\"text-uppercase text-white mb-3 mb-md-5\">\n                Services\n              </h6>\n\n\n              <ul class=\"list-unstyled\">\n                <li class=\"mb-3\">\n                  <a class=\"text-white-60\" href=\"#!\">Help Center</a>\n                </li>\n                <li class=\"mb-3\">\n                  <a class=\"text-white-60\" href=\"#!\">Press</a>\n                </li>\n                <li>\n                  <a class=\"text-white-60\" href=\"#!\">About us</a>\n                </li>\n              </ul>\n\n            </div>\n            <div class=\"col-1 col-md\">\n\n\n              <h6 class=\"text-uppercase text-white mb-3 mb-md-5\">\n                Products\n              </h6>\n\n\n              <ul class=\"list-unstyled\">\n                <li class=\"mb-3\">\n                  <a class=\"text-white-60\" href=\"#!\">Homepage</a>\n                </li>\n                <li class=\"mb-3\">\n                  <a class=\"text-white-60\" href=\"#!\">Pages</a>\n                </li>\n                <li class=\"mb-3\">\n                  <a class=\"text-white-60\" href=\"#!\">Legal</a>\n                </li>\n                <li>\n                  <a class=\"text-white-60\" href=\"#!\">Terms</a>\n                </li>\n              </ul>\n\n            </div>\n            <div class=\"col-1 col-md\">\n\n\n              <h6 class=\"text-uppercase text-white mb-3 mb-md-5\">\n                Services\n              </h6>\n\n\n              <ul class=\"list-unstyled\">\n                <li class=\"mb-3\">\n                  <a class=\"text-white-60\" href=\"#!\">Help Center</a>\n                </li>\n                <li class=\"mb-3\">\n                  <a class=\"text-white-60\" href=\"#!\">Press</a>\n                </li>\n                <li>\n                  <a class=\"text-white-60\" href=\"#!\">About us</a>\n                </li>\n              </ul>\n\n            </div>\n            <div class=\"col-1 col-md\">\n\n\n              <h6 class=\"text-uppercase text-white mb-3 mb-md-5\">\n                Connect\n              </h6>\n\n\n              <ul class=\"list-unstyled\">\n                <li class=\"mb-3\">\n                  <a class=\"text-white-60\" href=\"#!\"></a>\n                </li>\n                <li class=\"mb-3\">\n                  <a class=\"text-white-60\" href=\"#!\"></a>\n                </li>\n                <li class=\"mb-3\">\n                  <a class=\"text-white-60\" href=\"#!\"></a>\n                </li>\n                <li>\n                  <a class=\"text-white-60\" href=\"#!\"></a>\n                </li>\n              </ul>\n\n            </div>\n          </div>\n        </div>\n      </footer>\n  );\n}\n","import React from 'react';\nimport './footer_terms.css';\n\n\nexport default function FooterTerms() {\n  return (\n      <div className=\"footer_terms\">\n        <div className=\"row\">\n          <div className=\"col-2\">\n          </div>\n          <div className=\"col-4 llc\">\n            @ company name, LLC 2020 | A better way to eat healthy & fresh\n          </div>\n\n          <div className=\"col-2\">\n          </div>\n\n          <div className=\"col-4 llc\">\n            Do Not \"Sell My Info\" &nbsp;\n            <span>\n              <a href=\"#\">Privacy Policy </a>\n            </span>\n            <span>\n              <a href=\"#\"> Terms of Use</a>\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n","import React from 'react';\nimport { Formik } from 'formik';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport PackageButton from './button.js';\nimport * as yup from 'yup';\nimport './package_signup.css';\n\n\n// const { Formik } = formik;\n\nconst schema = yup.object({\n  firstName: yup.string().required(),\n  lastName: yup.string().required(),\n  username: yup.string().required(),\n  city: yup.string().required(),\n  state: yup.string().required(),\n  zip: yup.string().required(),\n  terms: yup.bool().required(),\n});\n\nexport default function PackageSignup() {\n  return (\n\n    <>\n\n\n    <div className=\"row\">\n      <div className=\"offset-lg-3 col-lg-6 offset-md-2 col-md-8 offset-xl-4 col-xl-4\">\n      <div className=\"signup_heading\">\n        Let’s set up your account\n      </div>\n\n      <div className=\"signup_subtext\">\n        You Selected the Free Plan: Get 40,000 Messages for one month\n      </div>\n        <Formik\n          validationSchema={schema}\n          onSubmit={console.log}\n          initialValues={{\n            firstName: 'Mark',\n            lastName: 'Otto',\n          }}\n        >\n          {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            isValid,\n            errors,\n          }) => (\n            <Form noValidate onSubmit={handleSubmit}>\n              <Form.Row>\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\n                  <Form.Label>First name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"firstName\"\n                    className=\"text_input\"\n                    value={values.firstName}\n                    onChange={handleChange}\n                    isValid={touched.firstName && !errors.firstName}\n                  />\n                  <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik02\">\n                  <Form.Label>Last name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"lastName\"\n                    className=\"text_input\"\n                    value={values.lastName}\n                    onChange={handleChange}\n                    isValid={touched.lastName && !errors.lastName}\n                  />\n\n                  <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                </Form.Group>\n\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col} md=\"8\" controlId=\"validationFormik03\">\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"text_input\"\n                    value={values.city}\n                    onChange={handleChange}\n                    isInvalid={!!errors.city}\n                  />\n\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.city}\n                  </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group as={Col} md=\"4\" controlId=\"validationFormik05\">\n                  <Form.Label>Zip</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Zip\"\n                    name=\"zip\"\n                    className=\"text_input\"\n                    value={values.zip}\n                    onChange={handleChange}\n                    isInvalid={!!errors.zip}\n                  />\n\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.zip}\n                  </Form.Control.Feedback>\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    name=\"password\"\n                    className=\"text_input\"\n                    value={values.firstName}\n                    onChange={handleChange}\n                    isValid={touched.firstName && !errors.firstName}\n                  />\n                  <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik02\">\n                  <Form.Label>Retype Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    name=\"retypePassword\"\n                    className=\"text_input\"\n                    value={values.lastName}\n                    onChange={handleChange}\n                    isValid={touched.lastName && !errors.lastName}\n                  />\n\n                  <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                </Form.Group>\n\n              </Form.Row>\n\n              <Button type=\"submit\" className=\"package_button signup_button\" variant=\"primary\">Create My Account</Button>\n\n              <div className=\"privacy\" >\n                By signing up, you agree to Instructs\n                <a href=\"#\"> Terms of Service </a>  and\n                <a href=\"#\"> Privacy Policy </a>\n              </div>\n              <div className=\"already_account\">\n                Already have an account? <a href=\"#\"> Login </a>\n              </div>\n            </Form>\n          )}\n        </Formik>\n\n\n      </div>\n    </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { Formik } from 'formik';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport PackageButton from './button.js';\nimport * as yup from 'yup';\nimport './signin.css';\n\n\n// const { Formik } = formik;\n\nconst schema = yup.object({\n  email: yup.string().email().required(),\n  password: yup.string().required(),\n});\n\nexport default function Signin() {\n  return (\n\n    <>\n\n\n    <div className=\"row\">\n      <div className=\"offset-lg-3 col-lg-6 offset-md-2 col-md-8 offset-xl-4 col-xl-4\">\n      <div className=\"signin_heading\">\n        Sign In\n      </div>\n\n      <div className=\"signin_text\">\n        Dont have an account? <a href=\"#\">Sign up</a>\n      </div>\n        <Formik\n          validationSchema={schema}\n          onSubmit={console.log}\n          initialValues={{\n            firstName: 'Mark',\n            lastName: 'Otto',\n          }}\n        >\n          {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            isValid,\n            errors,\n          }) => (\n            <Form noValidate onSubmit={handleSubmit}>\n              <Form.Row>\n\n              <Form.Group className=\"margin_auto\" as={Col} md=\"9\" controlId=\"validationFormik03\">\n                  <Form.Label>Email Address</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter Email Address\"\n                    name=\"email\"\n                    className=\"text_input signin_input\"\n                    onChange={handleChange}\n                    isInvalid={!!errors.email}\n                  />\n\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.email}\n                  </Form.Control.Feedback>\n                </Form.Group>\n\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group className=\"margin_auto\" as={Col} md=\"9\" controlId=\"validationFormik01\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Enter Password\"\n                    className=\"text_input signin_input\"\n                    onChange={handleChange}\n                    isInvalid={!!errors.password}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.password}\n                  </Form.Control.Feedback>\n                </Form.Group>\n\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group className=\"margin_auto\" as={Col} md=\"9\" controlId=\"validationFormik01\">\n            \n                    <Button type=\"submit\"  className=\"package_button signup_button\" variant=\"primary\">Sign In</Button>\n                </Form.Group>\n\n              </Form.Row>\n\n              <div className=\"forgot_password\" >\n                <a href=\"#\"> Forgot your password </a>\n              </div>\n\n            </Form>\n          )}\n        </Formik>\n\n\n      </div>\n    </div>\n    </>\n  );\n}\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport './followus.css';\n\n\nexport default function FollowUs() {\n  return (\n      <div className=\"followus_container\">\n          <div className=\"row\" style={{height:'100%'}}>\n            <div className=\"col-12 followus_content\">\n                <div className=\"row\">\n                    <div className=\"col-6 followus_left\">\n                        <div className=\"offset-lg-4 col-lg-8 col-md-12\">\n                            <div className=\"row\">\n                                <div className=\"col-md-9\">\n                                    <div className=\"whats_coockin\">\n                                        Discover What's <span className=\"cookin\">Cookin'</span>\n                                    </div>\n                                    <Form>\n                                        <Form.Row>\n\n                                            <Form.Group className=\"margin_auto\" as={Col} md=\"12\" controlId=\"validationFormik03\">\n                                                <Form.Control\n                                                    type=\"text\"\n                                                    placeholder=\"Email Address\"\n                                                    name=\"email\"\n                                                    className=\"text_input subscribe_input\"\n                                                />\n                                            </Form.Group>\n\n                                        </Form.Row>\n                                    </Form>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\" style={{'textAlign':'center'}}>\n                                        Sign up for offers, recipes, news & more\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-3 p-0 subscribe_container\">\n                                    <Button className=\"subscribe_button\">Subscribe</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n\n\n\n\n\n\n                    <div className=\"col-6 followus_right\">\n                        <div className=\"row\">\n                            <div className=\"col-md-5 offset-md-1\">\n                            <h6>FOLLOW US</h6>\n                            <a href=\"#\">\n                                <img\n                                    width=\"50\"\n                                    src=\"svg/facebook.svg\" />\n                            </a>\n                            <a href=\"#\">\n                                <img\n                                    width=\"50\"\n                                    src=\"svg/twitter.svg\" />\n                            </a>\n                            <a href=\"#\">\n                                <img\n                                    width=\"50\"\n                                    src=\"svg/instagram.svg\" />\n                            </a>\n                            <a href=\"#\">\n                                <img\n                                    width=\"50\"\n                                    src=\"svg/pinterest.svg\" />\n                            </a>\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n\n            </div>\n          </div>\n      </div>\n  );\n}","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\nimport './pricing_plan.css';\n\nexport default function PricingPlan() {\n\n\n    const [meal1, setMeal1] = React.useState('2');\n\n    const handleMeal1 = (event, newMeal) => {\n        setMeal1(newMeal);\n    };\n\n    const [meal2, setMeal2] = React.useState('2');\n\n    const handleMeal2 = (event, newMeal) => {\n        setMeal2(newMeal);\n    };\n\n    const [meal3, setMeal3] = React.useState('2');\n\n    const handleMeal3 = (event, newMeal) => {\n        setMeal3(newMeal);\n    };\n\n  return (\n    <>\n        <div className=\"pricing_content\">\n            <div class=\"pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\n                <h3 class=\"keep_it_healthy\">Keep it healthy</h3>\n                <h1 class=\"simple_fair\">Simple, fair pricing.</h1>\n                <p class=\"lead simple_healthy\">simple sample sample sample healthy healthy healthy healthy sample sample    simple sample healthy healthy healthy healthy sample sample</p>\n            </div>\n            <div class=\"container\">\n                <div class=\"card-deck mb-3 text-center\">\n                    <div class=\"card mb-4 shadow-sm pricing_card_1\">\n                        <div class=\"card-body\">\n                            <img className=\"img_1\" src=\"svg/eat.svg\" />\n                            <h4 class=\"my-0 font-weight-normal one_person_h\">One Person Plan</h4>\n                            <p className=\"plan_card_content\">\n                                Every meal plan comes with Entrees +Sides+ Fresh jucies one more item you can have\n                            </p>\n\n                            <ToggleButtonGroup\n                                value={meal1}\n                                exclusive\n                                onChange={handleMeal1}\n                                aria-label=\"text alignment\"\n                                >\n                                <ToggleButton value=\"2\" aria-label=\"left aligned\">\n                                    2\n                                </ToggleButton>\n                                <ToggleButton value=\"3\" aria-label=\"centered\">\n                                    3\n                                </ToggleButton>\n                                <ToggleButton value=\"4\" aria-label=\"right aligned\">\n                                    4\n                                </ToggleButton>\n                            </ToggleButtonGroup>\n\n                            <span className=\"meals\">Meals</span>\n                            <div className=\"row p-30\">\n                              <div className=\"col-6 border_up border_right\">\n                                <div className=\"amount_left\">\n                                  $90.99 <span>Per Meal</span>\n                                </div>\n\n                                <div className=\"amount_subtext_left\">\n                                  Free Delivery \n                                </div>\n                              </div>\n                              <div className=\"col-6 border_up\">\n                              <div className=\"amount_right\">\n                                  $19.98\n                                </div>\n                                <div className=\"amount_subtext_right\">\n                                  Total\n                                </div>\n                              </div>\n                            </div>\n\n                            <button type=\"button\" class=\"btn btn-lg btn-block btn-outline-primary\">Two Person Plan</button>\n                        </div>\n                    </div>\n                    <div class=\"card mb-4 shadow-sm pricing_card_2\">\n                        <div class=\"card-body\">\n                            <img className=\"img_2\" src=\"svg/eat.svg\" />\n                            <h4 class=\"my-0 font-weight-normal two_person_h\">Two Person Plan</h4>\n                            <p className=\"plan_card_content\">\n                                Every meal plan comes with Entrees +Sides+ Fresh jucies one more item you can have\n                            </p>\n\n                            <ToggleButtonGroup\n                                value={meal2}\n                                exclusive\n                                onChange={handleMeal2}\n                                aria-label=\"text alignment\"\n                                >\n                                <ToggleButton value=\"2\" aria-label=\"left aligned\">\n                                    2\n                                </ToggleButton>\n                                <ToggleButton value=\"3\" aria-label=\"centered\">\n                                    3\n                                </ToggleButton>\n                                <ToggleButton value=\"4\" aria-label=\"right aligned\">\n                                    4\n                                </ToggleButton>\n                            </ToggleButtonGroup>\n\n                            <span className=\"meals\">Meals</span>\n\n\n                            <div className=\"row p-30\">\n                              <div className=\"col-6 border_up border_right\">\n                                <div className=\"amount_left\">\n                                  $90.99 <span>Per Meal</span>\n                                </div>\n\n                                <div className=\"amount_subtext_left\">\n                                  Free Delivery \n                                </div>\n                              </div>\n                              <div className=\"col-6 border_up\">\n                              <div className=\"amount_right\">\n                                  $19.98\n                                </div>\n                                <div className=\"amount_subtext_right\">\n                                  Total\n                                </div>\n                              </div>\n                            </div>\n\n\n\n\n\n\n\n                            <button type=\"button\" class=\"btn btn-lg btn-block btn-primary\">Get started</button>\n                        </div>\n                    </div>\n                    <div class=\"card mb-4 shadow-sm pricing_card_3\">\n                        <div class=\"card-body\">\n                        <img className=\"img_3\" src=\"svg/eat.svg\" />\n                            <h4 class=\"my-0 font-weight-normal four_person_h\">Four Person Plan</h4>\n                            <p className=\"plan_card_content\">\n                                Every meal plan comes with Entrees +Sides+ Fresh jucies one more item you can have\n                            </p>\n\n                            <ToggleButtonGroup\n                                value={meal3}\n                                exclusive\n                                onChange={handleMeal3}\n                                aria-label=\"text alignment\"\n                                >\n                                <ToggleButton value=\"2\" aria-label=\"left aligned\">\n                                    2\n                                </ToggleButton>\n                                <ToggleButton value=\"3\" aria-label=\"centered\">\n                                    3\n                                </ToggleButton>\n                                <ToggleButton value=\"4\" aria-label=\"right aligned\">\n                                    4\n                                </ToggleButton>\n                            </ToggleButtonGroup>\n\n                            <span className=\"meals\">Meals</span>\n\n\n\n                            <div className=\"row p-30\">\n                              <div className=\"col-6 border_up border_right\">\n                                <div className=\"amount_left\">\n                                  $90.99 <span>Per Meal</span>\n                                </div>\n\n                                <div className=\"amount_subtext_left\">\n                                  Free Delivery \n                                </div>\n                              </div>\n                              <div className=\"col-6 border_up\">\n                              <div className=\"amount_right\">\n                                  $19.98\n                                </div>\n                                <div className=\"amount_subtext_right\">\n                                  Total\n                                </div>\n                              </div>\n                            </div>\n\n\n\n \n                            <button type=\"button\" class=\"btn btn-lg btn-block btn-primary\">Contact us</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div className=\"background_blue\"></div>\n        <div className=\"background_white\"></div>\n    </>\n    );\n}\n\n\n","import React from 'react';\nimport './confirm_and_pay.css';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\n\n\nconst schema = yup.object({\n    address: yup.string().required(),\n    lastName: yup.string().required(),\n    username: yup.string().required(),\n    city: yup.string().required(),\n    state: yup.string().required(),\n    zipcode: yup.string().required(),\n    terms: yup.bool().required(),\n    discount_code: yup.bool().required(),\n  });\n\n  \nexport default function ConfirmAndPay() {\n\n\n  return (\n    <div className=\"confirm_container\">\n        <div className=\"confirm_text\">\n            Almost there! So close you can almost taste it!\n        </div>\n        <div className=\"row\">\n            <div className=\"col-md-8\">\n            <Formik\n                validationSchema={schema}\n                onSubmit={console.log}\n                initialValues={{\n                    firstName: 'Mark',\n                    lastName: 'Otto',\n                }}\n                >\n                {({\n                    handleSubmit,\n                    handleChange,\n                    handleBlur,\n                    values,\n                    touched,\n                    isValid,\n                    errors,\n                }) => (\n                    <Form noValidate onSubmit={handleSubmit}>\n                        <div className=\"order_form\">\n                            <h4>Where do you want your Delivery</h4>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"8\" controlId=\"validationFormik01\">\n                                    <Form.Label>Address</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"address\"\n                                        className=\"text_input\"\n                                        value={values.address}\n                                        onChange={handleChange}\n                                        isValid={touched.address && !errors.address}\n                                        placeholder=\"Enter address\"\n                                    />\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                </Form.Group>\n\n                                <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\">\n                                    <Form.Label>Zip code</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"zipcode\"\n                                        className=\"text_input\"\n                                        value={values.zipcode}\n                                        onChange={handleChange}\n                                        isValid={touched.zipcode && !errors.zipcode}\n                                        placeholder=\"Enter zip code\"\n                                    />\n                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"4\" controlId=\"formGridState\">\n                                    <Form.Label>State</Form.Label>\n                                    <Form.Control as=\"select\" value=\"Choose...\">\n                                        <option>Choose...</option>\n                                        <option>...</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"4\" controlId=\"formGridState\">\n                                    <Form.Label>City</Form.Label>\n                                    <Form.Control as=\"select\" value=\"Choose...\">\n                                        <option>Choose...</option>\n                                        <option>...</option>\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"4\" controlId=\"formGridState\">\n                                    <Form.Label>Address type</Form.Label>\n                                    <Form.Control as=\"select\" value=\"Choose...\">\n                                        <option>Choose...</option>\n                                        <option>...</option>\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form.Row>\n                        </div>\n                        <div className=\"order_form mt-4\">\n                            <Form.Row>\n                                <div className=\"col-md-3\">\n                                    Discount Code\n                                </div>\n                                <div className=\"col-md-7\">\n                                    <Form.Group as={Col} md=\"12\" controlId=\"validationFormik01\">\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"discount_code\"\n                                            className=\"text_input\"\n                                            value={values.discount_code}\n                                            onChange={handleChange}\n                                            isValid={touched.discount_code && !errors.discount_code}\n                                        />\n                                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                                    </Form.Group>\n                                </div>\n                            </Form.Row>\n                        </div>\n\n\n                        <div className=\"order_form mt-4\">\n                            <Form.Row>\n\n                            </Form.Row>\n                        </div>\n\n                    </Form>\n            )}\n            </Formik>\n\n            </div>\n\n            <div className=\"col-md-4 order_summary\">\n                <h4>Order Summary</h4>\n                <div className=\"p-10\">\n                    <b>Email</b>\n                    <br />\n                    Syedhaq1122@gmail.com\n                </div>\n                <div className=\"p-10\">\n                    <b>Package</b>\n                    <br />\n                    2 Person - 3 Meals\n                </div>\n                <div className=\"p-10\">\n                    <b>Complementary Meals</b>\n                    <br />\n                    3 Meals\n                </div>\n\n                <div className=\"total\">\n                    Sub Total <span className=\"right\">$59.94</span>\n                    <div className=\"green\">\n                        Shipping <span className=\"right\"><b>Free</b></span>\n                    </div>\n                    <div>\n                        Total meals <span className=\"right\">6</span>\n                    </div>\n                    <div>\n                        Est. tax <span className=\"right\">$0.00</span>\n                    </div>\n                    <div>\n                        <b>Total <span className=\"right\">$59.94</span></b>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { useLocation } from 'react-router-dom'\nimport './steppers.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  }));\n\n  function getSteps() {\n    return ['Select Plan', 'Sign up', 'Checkout', 'Choose your meal'];\n  }\n  \n  function getStepContent(step) {\n    switch (step) {\n      case 0:\n        return 'Select Plan.';\n      case 1:\n        return 'Sign up';\n      case 2:\n        return 'Checkout';\n    case 3:\n        return 'Choose your meal';\n      default:\n        return 'Unknown step';\n    }\n  }\n\n\nexport default function Steppers() {\n    console.log(window.location.pathname);\n\n    \n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const steps = getSteps();\n\n    const setSteppers = () => {\n        switch (window.location.pathname){\n            case '/select_plan':\n                setActiveStep(0);\n            case '/signup':\n                setActiveStep(1);\n        }\n    }\n  \n    const isStepOptional = (step) => {\n      return step === 1;\n    };\n  \n    const isStepSkipped = (step) => {\n      return skipped.has(step);\n    };\n  \n    const handleNext = () => {\n      let newSkipped = skipped;\n      if (isStepSkipped(activeStep)) {\n        newSkipped = new Set(newSkipped.values());\n        newSkipped.delete(activeStep);\n      }\n  \n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n\n      setSkipped(newSkipped);\n    };\n\n    //setSteppers();\n    //setActiveStep(1);\n    // setActiveStep(() => 0 + 1);\n  \n    const handleBack = () => {\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n          // You probably want to guard against something like this,\n          // it should never occur unless someone's actively trying to break something.\n          throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n    \n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n          const newSkipped = new Set(prevSkipped.values());\n          newSkipped.add(activeStep);\n          return newSkipped;\n        });\n      };\n    \n      const handleReset = () => {\n        setActiveStep(0);\n      };\n\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n    </div>\n\n  );\n}","import styled, { keyframes, css } from \"styled-components\";\n\nconst animation = (width) => keyframes`\n  0% {\n\t\tbackground-position: -${width} 0;\n  }\n  \n  100% {\n\t\tbackground-position: ${width} 0; \n  }\n`;\n\nexport const Container = styled.div`\n  ${({\n    width,\n    height,\n    duration,\n    borderRadius,\n    primaryColor,\n    secondaryColor,\n  }) => css`\n    width: ${width};\n    height: ${height};\n\n    &.circle {\n      width: ${width};\n      height: ${width};\n      border-radius: ${width};\n    }\n\n    &.rect {\n      border-radius: ${borderRadius};\n    }\n\n    background: ${primaryColor};\n    background-image: linear-gradient(\n      to right,\n      ${primaryColor} 0%,\n      ${secondaryColor} 20%,\n      ${primaryColor} 50%,\n      ${primaryColor} 100%\n    );\n\n    animation: ${animation(width)} ${duration} linear infinite forwards;\n  `}\n\n  background-repeat: no-repeat;\n  background-size: 250% 250%;\n\n  margin: ${({ margin }) => margin || 0};\n  cursor: progress;\n`;\n","import React from \"react\";\nimport { string } from \"prop-types\";\n\nimport { Container } from \"./skeleton.css\";\n\nconst Skeleton = ({\n  width,\n  height,\n  duration,\n  borderRadius,\n  className,\n  margin,\n  primaryColor,\n  secondaryColor,\n  ...rest\n}) => (\n  <Container\n    {...{\n      width,\n      height,\n      duration,\n      borderRadius,\n      className,\n      margin,\n      primaryColor,\n      secondaryColor,\n    }}\n    {...rest}\n  />\n);\n\nSkeleton.propTypes = {\n  width: string,\n  height: string,\n  duration: string,\n  borderRadius: string,\n  className: string,\n  primaryColor: string,\n  secondaryColor: string,\n};\n\nSkeleton.defaultProps = {\n  width: \"240px\",\n  height: \"48px\",\n  duration: \"0.8s\",\n  borderRadius: \"4px\",\n  className: \"rect\",\n  primaryColor: \"#f6f7f8\",\n  secondaryColor: \"#edeef1\",\n};\n\nexport default Skeleton;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 324px;\n  height: 620px;\n  background: #ffffff 0% 0% no-repeat padding-box;\n  box-shadow: 0px 70px 70px #bebebe29 !important;\n  border-radius: 10px;\n  border: 0px;\n  box-shadow: 0px 70px 70px #bebebe29 !important;\n`;\n","import React from \"react\";\nimport { node } from \"prop-types\";\n\nimport { Container } from \"./card.css\";\n\nconst Card = ({ children }) => <Container>{children}</Container>;\n\nCard.propTypes = {\n  children: node,\n};\n\nCard.defaultProps = {\n  children: null,\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Footer from \"./common_components/footer.js\";\nimport FooterTerms from \"./common_components/footer_terms.js\";\nimport PackageButton from \"./common_components/button.js\";\nimport PackageSignup from \"./common_components/package_signup.js\";\nimport Signin from \"./common_components/signin.js\";\nimport FollowUs from \"./common_components/followus.js\";\nimport PricingPlan from \"./common_components/pricing_plan.js\";\nimport ConfirmAndPay from \"./common_components/confirm_and_pay.js\";\nimport Steppers from \"./common_components/steppers.js\";\nimport Skeleton from \"./common_components/skeleton\";\nimport Card from \"./common_components/card\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <>\n      {/* <Steppers /> */}\n      {/* <ConfirmAndPay /> */}\n      <PricingPlan />\n      <Card>\n        <Skeleton\n          width=\"100%\"\n          height=\"100%\"\n          borderRadius=\"10px\"\n          className=\"rect\"\n        />\n      </Card>\n      <Skeleton className=\"circle\" width=\"64px\" />\n      <Skeleton primaryColor=\"#ff9977\" secondaryColor=\"#ff7777\" width=\"20%\" />\n      <Skeleton\n        className=\"circle\"\n        width=\"64px\"\n        primaryColor=\"#ff9977\"\n        secondaryColor=\"#ff7777\"\n      />\n      {/* <Signin/> */}\n      {/* <PackageSignup /> */}\n      <FollowUs />\n      <Footer />\n      <FooterTerms />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}